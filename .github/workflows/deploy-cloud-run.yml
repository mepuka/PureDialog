name: Deploy to Google Cloud Run

on:
  push:
    branches:
      - main
      - infra/pulumi-setup # Temporary: for testing

permissions:
  contents: read
  id-token: write

jobs:
  deploy-infra:
    name: Deploy infrastructure
    runs-on: ubuntu-latest
    env:
      GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      GOOGLE_CLOUD_PROJECT: ${{ secrets.GCP_PROJECT_ID }}
      PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
      PULUMI_STACK: dev
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: pnpm
          cache-dependency-path: pnpm-lock.yaml

      - name: Install infra dependencies
        working-directory: infra
        run: pnpm install --frozen-lockfile

      - name: Deploy shared infrastructure
        uses: pulumi/actions@v5
        with:
          work-dir: infra
          stack-name: dev
          command: up
          args: --yes
          comment-on-pr: false
        env:
          PULUMI_ACCESS_TOKEN: ${{ env.PULUMI_ACCESS_TOKEN }}
          PULUMI_CONFIG_PASSPHRASE: ""

  deploy-services:
    name: Build images and update services
    runs-on: ubuntu-latest
    needs: deploy-infra
    env:
      GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      GOOGLE_CLOUD_PROJECT: ${{ secrets.GCP_PROJECT_ID }}
      PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
      PULUMI_STACK: dev
      REGION: us-west1
      REPOSITORY: puredialog
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: Setup gcloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}

      - name: Configure Artifact Registry authentication
        run: gcloud auth configure-docker "${{ env.REGION }}-docker.pkg.dev" --quiet

      - name: Build and push container images
        run: |
          set -euo pipefail
          gcloud builds submit \
            --config=cloudbuild.yaml \
            --substitutions=_REGION=${REGION},_REPOSITORY=${REPOSITORY},COMMIT_SHA=${{ github.sha }} \
            --project=${GCP_PROJECT_ID}

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: pnpm
          cache-dependency-path: pnpm-lock.yaml

      - name: Install infra dependencies
        working-directory: infra
        run: pnpm install --frozen-lockfile

      - name: Install Pulumi CLI
        run: |
          curl -fsSL https://get.pulumi.com | sh
          echo "$HOME/.pulumi/bin" >> $GITHUB_PATH

      - name: Update stack image tags
        working-directory: infra
        env:
          IMAGE_TAG: ${{ github.sha }}
        run: |
          set -euo pipefail
          pulumi stack select ${PULUMI_STACK} --non-interactive
          pulumi config set cloudrun:apiImage ${REGION}-docker.pkg.dev/${GCP_PROJECT_ID}/${REPOSITORY}/api:${IMAGE_TAG} --non-interactive
          pulumi config set cloudrun:metadataImage ${REGION}-docker.pkg.dev/${GCP_PROJECT_ID}/${REPOSITORY}/worker-metadata:${IMAGE_TAG} --non-interactive
          pulumi config set cloudrun:transcriptionImage ${REGION}-docker.pkg.dev/${GCP_PROJECT_ID}/${REPOSITORY}/worker-transcription:${IMAGE_TAG} --non-interactive

      - name: Deploy updated services
        uses: pulumi/actions@v5
        with:
          work-dir: infra
          stack-name: dev
          command: up
          args: --yes
          comment-on-pr: false
        env:
          PULUMI_ACCESS_TOKEN: ${{ env.PULUMI_ACCESS_TOKEN }}
          PULUMI_CONFIG_PASSPHRASE: ""
