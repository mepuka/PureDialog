name: Deploy to Google Cloud Run

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

env:
  # Core configuration - easy to adjust
  REGION: us-west1
  REPOSITORY: puredialog
  PULUMI_STACK: mepuka-org/pure-dialog-infra/dev
  NODE_VERSION: 22
  PNPM_VERSION: 9

jobs:
  deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: üì• Checkout repository
        uses: actions/checkout@v4

      # Step 2: Setup Node.js and pnpm (fixed order)
      - name: üîß Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: üì¶ Enable pnpm
        run: |
          echo "üì¶ Enabling pnpm..."
          corepack enable
          corepack prepare pnpm@${{ env.PNPM_VERSION }} --activate
          pnpm --version

      # Step 3: Authenticate to Google Cloud
      - name: üîê Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: ‚òÅÔ∏è Setup Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      # Step 4: Verify setup
      - name: ‚úÖ Verify setup
        run: |
          echo "üîç Verifying environment setup..."
          echo "Project ID: ${{ secrets.GCP_PROJECT_ID }}"
          echo "Region: ${REGION}"
          echo "Repository: ${REPOSITORY}"
          echo "Commit SHA: ${{ github.sha }}"
          gcloud config list
          gcloud artifacts repositories describe ${REPOSITORY} \
            --location=${REGION} || echo "‚ö†Ô∏è  Repository might not exist yet"

      # Step 5: Build and push container images
      - name: üèóÔ∏è Build and push container images
        run: |
          echo "üèóÔ∏è Building container images..."
          set -euo pipefail

          # Show what we're building
          echo "Images to build:"
          echo "  - api:${{ github.sha }}"
          echo "  - worker-metadata:${{ github.sha }}"
          echo "  - worker-transcription:${{ github.sha }}"

          # Run Cloud Build
          gcloud builds submit \
            --config=cloudbuild.yaml \
            --substitutions=_REGION=${REGION},_REPOSITORY=${REPOSITORY},COMMIT_SHA=${{ github.sha }} \
            --project=${{ secrets.GCP_PROJECT_ID }}

          echo "‚úÖ Container images built successfully"

      # Step 6: Setup Pulumi
      - name: üéØ Install Pulumi dependencies
        working-directory: infra
        run: |
          echo "üì¶ Installing infrastructure dependencies..."
          pnpm install --frozen-lockfile
          echo "‚úÖ Dependencies installed"

      - name: üîß Setup Pulumi CLI
        uses: pulumi/actions@v5
        with:
          command: version
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}

      # Step 7: Configure Pulumi stack
      - name: üìù Configure Pulumi stack
        working-directory: infra
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          echo "üìù Configuring Pulumi stack..."

          # Login to Pulumi
          pulumi login

          # Select stack
          pulumi stack select ${PULUMI_STACK} --non-interactive || {
            echo "‚ùå Failed to select stack ${PULUMI_STACK}"
            echo "Available stacks:"
            pulumi stack ls
            exit 1
          }

          # Set image configurations
          echo "üñºÔ∏è Setting image configurations..."
          pulumi config set cloudrun:apiImage \
            ${REGION}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${REPOSITORY}/api:${IMAGE_TAG} \
            --stack ${PULUMI_STACK}

          pulumi config set cloudrun:metadataImage \
            ${REGION}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${REPOSITORY}/worker-metadata:${IMAGE_TAG} \
            --stack ${PULUMI_STACK}

          pulumi config set cloudrun:transcriptionImage \
            ${REGION}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${REPOSITORY}/worker-transcription:${IMAGE_TAG} \
            --stack ${PULUMI_STACK}

          echo "‚úÖ Stack configured"
          echo "Current configuration:"
          pulumi config --show-secrets

      # Step 8: Deploy infrastructure
      - name: üöÄ Deploy infrastructure
        uses: pulumi/actions@v5
        with:
          work-dir: infra
          stack-name: ${{ env.PULUMI_STACK }}
          command: up
          args: --yes --non-interactive
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          GOOGLE_PROJECT: ${{ secrets.GCP_PROJECT_ID }}

      # Step 9: Show deployment results
      - name: üìä Show deployment results
        if: success()
        working-directory: infra
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
        run: |
          echo "‚úÖ Deployment successful!"
          echo "üìä Stack outputs:"
          pulumi stack output --json | jq '.'
          echo ""
          echo "üîó Service URLs:"
          pulumi stack output --json | jq -r 'to_entries[] | select(.key | contains("url")) | "\(.key): \(.value)"'
